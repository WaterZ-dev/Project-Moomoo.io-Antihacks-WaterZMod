// ==UserScript==
// @author       WaterZ
// @name         Project Noob for now (deobfuscated) 
// @match        *://moomoo.io/*
// @match        *://sandbox.moomoo.io/*
// @match        *://dev.moomoo.io/*
// @grant        none
// @version	 1.7
// @description  dsc.gg/project-noob (this doesn't auto update so check server announcements or back here for new versions.)
// @require https://greasyfork.org/scripts/423602-msgpack/code/msgpack.js
// @require http://code.jquery.com/jquery-3.3.1.min.js
// @require https://code.jquery.com/ui/1.12.0/jquery-ui.min.js
// @require https://cdnjs.cloudflare.com/ajax/libs/jquery-confirm/3.3.0/jquery-confirm.min.js
// @require https://cdn.jsdelivr.net/gh/emn178/js-sha3/build/sha3.min.js
// @require https://greasyfork.org/scripts/423602-msgpack/code/msgpack.js
// @require https://cdnjs.cloudflare.com/ajax/libs/jquery-confirm/3.3.0/jquery-confirm.min.js
// ==UserScript==

/*  

***CONTROLS***

Q=heal (u prob need bc anti is SH1T if u have >60 ping, the anti is alright if you have good ping and fast cpu (u can tell if u have a good fps) so it processes in time more accurately)
R=Insta (op ngl)
F=Boost/pit (single)
G=Bull hat+shadow wings
K=Spawnpad (quad)
Z='click' tank (it hits once and uneqips, but you aren't really clicking -  you are pressing Z)
C=soldier+cx wings
V=spike macro (single)
N= frozen back mills (triple)
T= turret gear i think
H= turret placer (turret, tp, platform, blocker, etc)
U= age 1 insta (kills soldier)
L= bow insta (only kills soldier with polearm & bow)
J=samurai+darkwings i think
Y= something secret >:D
Left Click= attac
Right click=bullspam
scroll click=nothing yet
SPACE BAR= OP spike insta (new!)
"-" (hyphen) = secret katana experiment(for development, too lazy to remove :P)
"=" (equals) = secret food experiment (for development, too lazy to remove :P)
"," (comma) = katana upgrade hack (age 8 required)
"." (period) = musket/crossbow upgrade hack (age 8 reqired for crossbow and age 9 for musket)
numpad 9 max mill [age 8]
numpad 8 max wall [age 7]
numpad 5 spinning spike [age 9]
numpad 6 repeater crossbow [age 9]
numpad 3 great axe [age 8]
up arrow = chatspam (in development) 


***CHANGELOG***  

created script and added 3x frozen back mills (originally, it was called freeze mill and was only for mills) (v0.1) 
added boostspike (no funciton key YET) (v0.2)
added spike, pit, and some hat macros (v0.3)
added insta kill and q-heal (v0.4) 
added [kinda trash] basic autoheal (v0.5)
improved autoheal (v0.6) 
made autoheal damage based (w/ more speed based on damage) (v0.7)
made it more like an anti-insta and still kinda trash anyway (v0.8)
added fourspawnpad placer (v0.9)
added aimbot (v1)
added katana-musket and other upgrade hacks (someimtes breaks) (v1.1)
added age 1 insta (v1.2)
added soldier and cx on q heal (v1.3)
added spike insta (v1.4)
added bow insta (v1.5)
added samurai hat macro (v1.6)
added some debug/development and secret stuff (v1.7)

***COMING SOON*** 

real anti-insta, 
anti trap, 
anti boost spike, 
boost spike,
request other stuff at my discord: WaterZ#9011 or dsc.gg/project-noob

******NOTE:*****
no auto updates, only will be on this github repository...
join if epic: dsc.gg/project-noob
*/

setInterval(() => window.follmoo && follmoo(), 10);
setInterval(function() {
    //adblocker
    document.querySelector("#pre-content-container").style.display = "none";
    //better fps (use native res)
    window.location.native_resolution = true;
}, 1000);
let hue = 0;
let mouseX;
let mouseY;

let width;
let height;

document.title = "\x50\x72\x6f\x6a\x65"+"\x63\x74\x20\x4e\x6f"+"\x6f\x62\x20\x69\x67";

setInterval(() => {
    if(autoaim == true) {
        doNewSend(["2", [nearestEnemyAngle]]);
    }
}, 0);

setInterval(() => {
    if(click == true) {
    doNewSend(["c", [1, null]]);
    doNewSend(["c", [0, null]]);
    }
}, 10);
setInterval(() => {
    if(autoprimary == true) {
        doNewSend(["5", [primary, true]]);
    }
}, 0);

setInterval(() => {
    if(autosecondary == true) {
        doNewSend(["5", [secondary, true]]);
    }
}, 0);


function normal() {
    hat(normalHat);
    acc(normalAcc);
}

function aim(x, y){
     var cvs = document.getElementById("gameCanvas");
     cvs.dispatchEvent(new MouseEvent("mousemove", {
         clientX: x,
         clientY: y

     }));
}

var sWindmill = 78;
var antiinsta = false;
var antibull = false;
var bullturret = false;
var click = false;
var nearestEnemy;
var nearestEnemyAngle;
var isEnemyNear;
var primary;
var secondary;
var foodType;
var wallType;
var spikeType;
var millType;
var mineType;
var boostType;
var turretType;
var spawnpadType;
var autoaim = false;
var autoprimary = false;
var autosecondary = false;
var tick = 1;
var oldHat;
var oldAcc;
var enemiesNear;
var normalHat;
var normalAcc;
var ws;
var msgpack5 = msgpack;
var boostDir;
let myPlayer = {
    id: null,
    x: null,
    y: null,
    dir: null,
    object: null,
    weapon: null,
    clan: null,
    isLeader: null,
    hat: null,
    accessory: null,
    isSkull: null
};

let healSpeed = 60;
var messageToggle = 0;
var clanToggle = 0;
let healToggle = 1;
let healToggle1 = 0;
let hatToggle = 1;
let crashing;
let closed;
let AutoPlague = 0;
let katana = 0;
var PREFIX = "!";
let clickInsta = 1;

document.msgpack = msgpack;
function n(){
     this.buffer = new Uint8Array([0]);
     this.buffer.__proto__ = new Uint8Array;
     this.type = 0;
}
document.addEventListener("mousedown", e => { //attac
  if (e.button == 1 && iCliked == 1) {
      doNewSend(["ch", [\x68\x65\x20\x61\x74\x74\x61\x63"]]);
doNewSend(['5', ['length', !0]]);
  }
});

document.addEventListener("mousedown", e => { //bullspam
  if (e.button == 2) {
      doNewSend(["ch", [""]]);
            doNewSend(["13c", [0, 0, 1]]);
            doNewSend(["13c", [1, 7, 0]]);
            doNewSend(["13c", [0, 7, 0]]);
            doNewSend(["13c", [1, 21, 1]]);
            doNewSend(["13c", [0, 21, 1]]);
            setTimeout( () => {
        doNewSend(["13c", [0, 0, 1]]);
        doNewSend(["13c", [0, 0, 0]]);
        doNewSend(["13c", [1, 21, 1]]);
        doNewSend(["13c", [0, 21, 1]]);
        if (myPlayer.y < 2400){
            doNewSend(["13c", [1, 15, 0]]);
            doNewSend(["13c", [0, 15, 0]]);
        } else if (myPlayer.y > 6850 && myPlayer.y < 7550){
            doNewSend(["13c", [1, 31, 0]]);
            doNewSend(["13c", [0, 31, 0]]);
                } else {
	        doNewSend(["13c", [1, 12, 0]]);//grassland speed hat
            doNewSend(["13c", [0, 12, 0]]);//monke tail
                }
          }, 120);


  }
});




WebSocket.prototype.oldSend = WebSocket.prototype.send;
WebSocket.prototype.send = function(m){
    if (!ws){
        document.ws = this;

        ws = this;
        socketFound(this);
    }
    this.oldSend(m);
};


function socketFound(socket){
    socket.addEventListener('message', function(message){
        handleMessage(message);
    });
}

function handleMessage(m){
    let temp = msgpack5.decode(new Uint8Array(m.data));
    let data;
    if(temp.length > 1) {
        data = [temp[0], ...temp[1]];
        if (data[1] instanceof Array){
            data = data;
        }
    } else {
      data = temp;
    }
    let item = data[0];
    if(!data) {return}

    if(item === "io-init") {
            let cvs = document.getElementById("gameCanvas");
            width = cvs.clientWidth;
            height = cvs.clientHeight;
            $(window).resize(function() {
                width = cvs.clientWidth;
                height = cvs.clientHeight;
            });
            cvs.addEventListener("mousemove", e => {
                mouseX = e.clientX;
                mouseY = e.clientY;
            });
        }


    if (item == "1" && myPlayer.id === null){
        myPlayer.id = data[1];
    }

    if (item == "33") {
        enemiesNear = [];
        for(let i = 0; i < data[1].length / 13; i++) {
            let playerInfo = data[1].slice(13*i, 13*i+13);
            if(playerInfo[0] == myPlayer.id) {
                myPlayer.x = playerInfo[1];
                myPlayer.y = playerInfo[2];
                myPlayer.dir = playerInfo[3];
                myPlayer.object = playerInfo[4];
                myPlayer.weapon = playerInfo[5];
                myPlayer.clan = playerInfo[7];
                myPlayer.isLeader = playerInfo[8];
                myPlayer.hat = playerInfo[9];
                myPlayer.accessory = playerInfo[10];
                myPlayer.isSkull = playerInfo[11];
            } else if(playerInfo[7] != myPlayer.clan || playerInfo[7] === null) {
                enemiesNear.push(playerInfo);
            }
        }
    }


    if(item == "6"){
        for(let i = 0; i < data[1].length / 8; i++){
            let ObjectData = data[1].slice(8*i, 8*i+8);
            if(ObjectData[6] == 15 && ObjectData[7] != myPlayer.id){
                if(Math.sqrt(Math.pow((myPlayer.y-ObjectData[2]), 2) + Math.pow((myPlayer.x-ObjectData[1]), 2)) < 120){
                    for(let i=0;i<36;i++){
                        let angle = myPlayer.dir + toRad(i * 10);
                place(spikeType, angle);
                        doNewSend(["5", [primary, true]]);
                        doNewSend(["ch", ["\x65"]]);


                    }

                }
            }
        }
    }

    isEnemyNear = false;
    if(enemiesNear) {
        nearestEnemy = enemiesNear.sort((a,b) => dist(a, myPlayer) - dist(b, myPlayer))[0];
    }

    if(nearestEnemy) {
        nearestEnemyAngle = Math.atan2(nearestEnemy[2]-myPlayer.y, nearestEnemy[1]-myPlayer.x);
        if(Math.sqrt(Math.pow((myPlayer.y-nearestEnemy[2]), 2) + Math.pow((myPlayer.x-nearestEnemy[1]), 2)) < 0) {
            isEnemyNear = true;
            if(autoaim == false && myPlayer.hat != 7 && myPlayer.hat != 53) {
                normalHat = 6;
                if(primary != 8) {
                    normalAcc = 19;
                }
            };
        }
    }


    if (!nearestEnemy) {
        nearestEnemyAngle = myPlayer.dir;
    }

if(item == "h" && data[1] == myPlayer.id) {
       if(data[2] < 100 && data[2] > 0 && healToggle == 1) { //Autoheal
           setTimeout( () => {
               place(foodType, null);
               place(foodType, null);
               place(foodType, null);
               place(foodType, null);
               place(foodType, null);
               doNewSend(["ch", ["\x50\x72\x6f\x6a\x65\x63\x74\x20\x4e\x6f\x6f\x62\x3a\x20\x41\x6e\x74\x69\x2d\x49\x6e\x73\x74\x61"]])
           }, healSpeed);
       }
   }

   update();
}


function doNewSend(sender){
    ws.send(new Uint8Array(Array.from(msgpack5.encode(sender))));
}

function acc(id) {
    doNewSend(["13c", [0, 0, 1]]);
    doNewSend(["13c", [0, id, 1]]);
}

function hat(id) {
    doNewSend(["13c", [0, id, 0]]);
}


function place(id, angle = Math.atan2(mouseY - height / 2, mouseX - width / 2)) { //object placer
    doNewSend(["5", [id, null]]);
    doNewSend(["c", [1, angle]]);
    doNewSend(["c", [0, angle]]);
    doNewSend(["5", [null]]);
}


function holding(id, angle = Math.atan2(mouseY - height / 2, mouseX - width / 2)) {
    doNewSend(["5", [id, null]]);
}

function boostSpike() {  // boost spike
    if(boostDir == null) {
        boostDir = nearestEnemyAngle;
    }
    place(spikeType, boostDir + toRad(90));
    place(spikeType, boostDir - toRad(90));
    place(boostType, boostDir);
    doNewSend(["33", [boostDir]]);
}



var repeater = function(key, action, interval) { //clear
    let _isKeyDown = false;
    let _intervalId = undefined;

    return {
        start(keycode) {
            if(keycode == key && document.activeElement.id.toLowerCase() !== 'chatbox') {
                _isKeyDown = true;
                if(_intervalId === undefined) {
                    _intervalId = setInterval(() => {
                        action();
                        if(!_isKeyDown){
                            clearInterval(_intervalId);
                            _intervalId = undefined;
                            console.log("claered");
                        }
                    }, interval);
                }
            }
        },

        stop(keycode) {
            if(keycode == key && document.activeElement.id.toLowerCase() !== 'chatbox') {
                _isKeyDown = false;
            }
        }
    };


}

if(isEnemyNear == false && autoaim == false) {
        normalAcc = 11;
        if (myPlayer.y < 2400){
            normalHat = 15;
        } else if (myPlayer.y > 6850 && myPlayer.y < 7550){
            normalHat = 31;
        } else {
	        normalHat = 12;
        }
    }
    if (!nearestEnemy) {
        nearestEnemyAngle = myPlayer.dir;
    }

var repeater2 = function(key, action) {
    let _isKeyDown = false;

    return {
        start(keycode) {
            if(keycode == key && document.activeElement.id.toLowerCase() !== 'chatbox') {
                _isKeyDown = true;
            }
        },

        stop(keycode) {
            if(keycode == key && document.activeElement.id.toLowerCase() !== 'chatbox') {
                _isKeyDown = false;
            }
        }
    };


}




const healer2 = repeater(81, () => {place(foodType, null);
                                    place(foodType, null);
                                    place(foodType, null)}, 30);
const boostPlacer = repeater(70, () => {place(boostType);
                                        place(boostType);
                                        place(boostType);
                                        place(boostType)}, 0);
const fourSpawnpader = repeater(75, fourSpawnpad, 0);
const spikePlacer = repeater(86, () => {place(spikeType);
                                        place(spikeType);
                                        place(spikeType);
                                        place(spikeType)}, 0);

const millPlacer = repeater(78, () => {
         place(millType, Math.atan2(mouseY - height / 2, mouseX - width / 2) + toRad(0xe53d2f0184));
        place(millType, Math.atan2(mouseY - height / 2, mouseX - width / 2) + toRad(0xe53d2f0144));
        place(millType, Math.atan2(mouseY - height / 2, mouseX - width / 2) + toRad(-0xe53d2f0144));
;});
const turretPlacer = repeater(72, () => {place(turretType)}, 0);

document.addEventListener('keydown', (e)=>{
    spikePlacer.start(e.keyCode);
    fourSpawnpader.start(e.keyCode);
    healer2.start(e.keyCode);
    boostPlacer.start(e.keyCode);
    millPlacer.start(e.keyCode);
    turretPlacer.start(e.keyCode);

    if (e.keyCode == 67 && document.activeElement.id.toLowerCase() !== 'chatbox') { //Soldier
        doNewSend(["13c", [1, 6, 0]]);
        doNewSend(["13c", [0, 6, 0]]);
        doNewSend(["13c", [0, 0, 1]]);
    }
    
    if(e.keyCode == 85 && document.activeElement.id.toLowerCase() !== 'chatbox') { //age 1 insta
        autoaim = true;
        doNewSend(["5", [primary, true]]);
        doNewSend(["13c", [0, 7, 0]]);
        doNewSend(["13c", [0, 0, 1]]);
        doNewSend(["13c", [0, 18, 1]]);
        doNewSend(["7", [1]]);
        setTimeout( () => {
        doNewSend(["6", [5]]);
        place(spikeType, null);
        }, 90);
        setTimeout( () => {
        doNewSend(["13c", [0, 53, 0]]);
        doNewSend(["13c", [0, 21, 1]]);
        }, 200);
        setTimeout( () => {
            doNewSend(["5", [primary, true]]);
            doNewSend(["7", [1]]);
             doNewSend(["13c", [0, 0, 1]]);
              doNewSend(["13c", [0, 0, 0]]);
              if(myPlayer.y < 2400){
              doNewSend(["13c", [0, 11, 1]]);
              doNewSend(["13c", [0, 15, 0]]);
              } else if(myPlayer.y > 6850 && myPlayer.y < 7550){
              doNewSend(["13c", [0, 11, 1]]);
              doNewSend(["13c", [0, 31, 0]]);
              } else if(isEnemyNear == true){
              doNewSend(["13c", [0, 21, 1]]);
              doNewSend(["13c", [0, 6, 0]]);
              } else {
              doNewSend(["13c", [0, 11, 1]]);
              doNewSend(["13c", [0, 12, 0]]);
              }
            autoaim = false;
        }, 300);
    }
    
    if(e.keyCode == 76 && document.activeElement.id.toLowerCase() !== 'chatbox'){ //bow insta
	autoaim = true;
        doNewSend(["5", [secondary, true]]);
        doNewSend(["7", [1]]);
        setTimeout( () => {
            doNewSend(["13c", [0, 53, 0]]);
            doNewSend(["6", [12]]);
            doNewSend(["13c", [0, 19, 1]]);
        }, 100);
        setTimeout( () => {
            doNewSend(["6", [15]]);
            doNewSend(["13c", [0, 21, 1]]);
        }, 200);
        setTimeout( () => {
            doNewSend(["7", [1]]);
             doNewSend(["13c", [0, 0, 1]]);
              doNewSend(["13c", [0, 0, 0]]);
              if(myPlayer.y < 2400){
              doNewSend(["13c", [0, 11, 1]]);
              doNewSend(["13c", [0, 15, 0]]);
              } else if(myPlayer.y > 6850 && myPlayer.y < 7550){
              doNewSend(["13c", [0, 11, 1]]);
              doNewSend(["13c", [0, 31, 0]]);
              } else if(isEnemyNear == true){
              doNewSend(["13c", [0, 21, 1]]);
              doNewSend(["13c", [0, 6, 0]]);
              } else {
              doNewSend(["13c", [0, 11, 1]]);
              doNewSend(["13c", [0, 12, 0]]);
              }
            doNewSend(["5", [primary, true]]);
            autoaim = false;
        }, 300);
    }
    
    if (e.keyCode == 89 && document.activeElement.id.toLowerCase() !== 'chatbox') { //idk press "y"
	doNewSend(["13c", [0, 11, 0]]);
	doNewSend(["13c", [0, 21, 1]]);
    
    if (e.keyCode == 74 && document.activeElement.id.toLowerCase() !== 'chatbox') { // Samurai n dark wings
                doNewSend(["13c", [0, 19, 1]]);
                doNewSend(["13c", [0, 20, 0]]);
    
    if (e.keyCode == 81 && document.activeElement.id.toLowerCase() !== 'chatbox') { //soldier and cx equip on q heal
	doNewSend(["13c", [0, 21, 1]]);
	doNewSend(["13c", [0, 6, 0]]);
    }

    if (e.keyCode == 71 && document.activeElement.id.toLowerCase() !== 'chatbox') { //bull hat
        doNewSend(["13c", [1, 7, 0]]);
        doNewSend(["13c", [0, 7, 0]]);
        doNewSend(["13c", [0, 0, 1]]);
    }


    if (e.keyCode == 90 && document.activeElement.id.toLowerCase() !== 'chatbox') { //Tank Gear
        click = true;
        doNewSend(["13c", [0, 0, 1]]);
        doNewSend(["13c", [0, 0, 0]]);
        doNewSend(["13c", [1, 40, 0]]);
        doNewSend(["13c", [0, 40, 0]]);
                doNewSend(["13c", [1, 21, 1]]);
        doNewSend(["13c", [0, 21, 1]]);
    }

    if (e.keyCode == 84 && document.activeElement.id.toLowerCase() !== 'chatbox') { //turret gear
        doNewSend(["13c", [1, 22, 0]]);
        doNewSend(["13c", [0, 22, 0]]);
        doNewSend(["13c", [0, 0, 1]]);

    }

 if (e.keyCode == 16 && document.activeElement.id.toLowerCase() !== 'chatbox') { //speedhat
     doNewSend(["ch", ["\x69\x20\x61\x6d\x20\x73\x70\x65\x65\x64"]]);
        doNewSend(["13c", [0, 0, 1]]);
        doNewSend(["13c", [0, 0, 0]]);
            doNewSend(["13c", [1, 11, 1]]);
        doNewSend(["13c", [0, 11, 1]]);
        if (myPlayer.y < 2400){
                doNewSend(["13c", [1, 11, 1]]);
                doNewSend(["13c", [0, 11, 1]]);
            doNewSend(["13c", [1, 15, 0]]);
                doNewSend(["13c", [0, 15, 0]]);
        } else if (myPlayer.y > 6850 && myPlayer.y < 7550){
            doNewSend(["13c", [1, 11, 1]]);
                doNewSend(["13c", [0, 11, 1]]);
                doNewSend(["13c", [1, 31, 0]]);
            doNewSend(["13c", [0, 31, 0]]);
        } else {
                doNewSend(["13c", [1, 11, 1]]);
            doNewSend(["13c", [0, 11, 1]]);
                doNewSend(["13c", [1, 12, 0]]);
            doNewSend(["13c", [0, 12, 0]]);
        }
    }

    if(e.keyCode == 187 && document.activeElement.id.toLowerCase() !== 'chatbox') {
        healToggle = (healToggle + 1) % 2;
    }
    if(e.keyCode == 189 && document.activeElement.id.toLowerCase() !== 'chatbox') {
        katana = (katana + 1) % 2;
    }



     if(e.keyCode == 82 && document.activeElement.id.toLowerCase() !== 'chatbox') { //instakill
            autoaim = true;
            autoprimary = true;
            autosecondary = false;
            doNewSend(["13c", [0, 0, 1]]);
            doNewSend(["5", [primary, true]]);
            doNewSend(["7", [1]]);
            doNewSend(["13c", [1, 7, 0]]);
            doNewSend(["13c", [0, 7, 0]]);
            doNewSend(["13c", [1, 13, 1]]);
            doNewSend(["13c", [0, 13, 1]]);
        setTimeout( () => {
            autoprimary = false;
            autosecondary = true;
            doNewSend(["13c", [0, 0, 0]]);
            doNewSend(["13c", [1, 53, 0]]);
            doNewSend(["13c", [0, 53, 0]]);
            doNewSend(["13c", [1, 21, 1]]);
            doNewSend(["13c", [0, 21, 1]]);
            doNewSend(["5", [secondary, true]]);
        }, 110);
        setTimeout( () => {
            doNewSend(["7", [1]]);
            doNewSend(["5", [primary, true]]);
            autosecondary = false;
            autoaim = false;
                           doNewSend(["13c", [0, 0, 1]]);
        doNewSend(["13c", [0, 0, 0]]);
        }, 220);
    }
    
    if(e.keyCode == 32 && document.activeElement.id.toLowerCase() !== 'chatbox') { //spike insta
	autoaim = true;
	doNewSend(["5", [primary, true]]);
        doNewSend(["13c", [0, 7, 0]]);
        doNewSend(["13c", [0, 0, 1]]);
        doNewSend(["13c", [0, 18, 1]]);
        place(spikeType, myPlayer.dir + toRad(43));
        place(spikeType, myPlayer.dir - toRad(43));
        doNewSend(["c", [1]]);
        setTimeout( () => {
            doNewSend(["13c", [0, 53, 0]]);
            doNewSend(["13c", [0, 21, 1]]);
        }, 100);
        setTimeout( () => {
            doNewSend(["c", [0]]);
             doNewSend(["13c", [0, 0, 1]]);
              doNewSend(["13c", [0, 0, 0]]);
              if(myPlayer.y < 2400){
              doNewSend(["13c", [0, 11, 1]]);
              doNewSend(["13c", [0, 15, 0]]);
              } else if(myPlayer.y > 6850 && myPlayer.y < 7550){
              doNewSend(["13c", [0, 11, 1]]);
              doNewSend(["13c", [0, 31, 0]]);
              } else if(isEnemyNear == true){
              doNewSend(["13c", [0, 21, 1]]);
              doNewSend(["13c", [0, 6, 0]]);
              } else {
              doNewSend(["13c", [0, 11, 1]]);
              doNewSend(["13c", [0, 12, 0]]);
              }
            autoaim = false;
        }, 200);
    }
    if(e.keyCode == 188 && document.activeElement.id.toLowerCase() !== 'chatbox') { ///katana [age 8]
        doNewSend(["6", [4]]);
    }
    if(e.keyCode == 190 && document.activeElement.id.toLowerCase() !== 'chatbox') { ///musket [age 9]
        doNewSend(["6", [15]]);
   }
    if(e.keyCode == 190 && document.activeElement.id.toLowerCase() !== 'chatbox') { ///crossbow [age 8]
        doNewSend(["6", [12]]);
    }
    if(e.keyCode == 105 && document.activeElement.id.toLowerCase() !== 'chatbox') { ///num9 max mill [age 8]
        doNewSend(["6", [28]]);
    }
    if(e.keyCode == 104 && document.activeElement.id.toLowerCase() !== 'chatbox') { ///num8 max wall [age 7]
        doNewSend(["6", [21]]);
    }
    if(e.keyCode == 101 && document.activeElement.id.toLowerCase() !== 'chatbox') { ///num5 spinning spike [age 9]
        doNewSend(["6", [25]]);
    }
    if(e.keyCode == 102 && document.activeElement.id.toLowerCase() !== 'chatbox') { ///num6 repeater crossbow [age 9]
        doNewSend(["6", [13]]);
    }
    if(e.keyCode == 99 && document.activeElement.id.toLowerCase() !== 'chatbox') { ///num3 great axe [age 8]
        doNewSend(["6", [2]]);
    }

});
document.addEventListener('keyup', (e)=>{
if (e.keyCode == 38 && document.activeElement.id.toLowerCase() !== 'chatbox') {
			if (ChatSpam) {
            ChatSpam1 = setTimeout(function(){ ChatSpamFC1(); }, 1);
			} else {
            clearTimeout(ChatSpam1);
            clearTimeout(ChatSpam2);
            clearTimeout(ChatSpam3);
            clearTimeout(ChatSpam4);
            clearTimeout(ChatSpam5);
            clearTimeout(ChatSpam6);
            clearTimeout(ChatSpam7);
            clearTimeout(ChatSpam8);
            clearTimeout(ChatSpam9);
            clearTimeout(ChatSpam10);
            clearTimeout(ChatSpam11);
            clearTimeout(ChatSpam12);
            clearTimeout(ChatSpam13);
            clearTimeout(ChatSpam14);
            clearTimeout(ChatSpam15);
            clearTimeout(ChatSpam16);
            clearTimeout(ChatSpam17);
            clearTimeout(ChatSpam18);
            clearTimeout(ChatSpam19);
            clearTimeout(ChatSpam20);
                clearTimeout(ChatSpam21);
                clearTimeout(ChatSpam22);
                clearTimeout(ChatSpam23);
                clearTimeout(ChatSpam24);
                clearTimeout(ChatSpam25);
                clearTimeout(ChatSpam26);
                clearTimeout(ChatSpam27);
                clearTimeout(ChatSpam28);
                clearTimeout(ChatSpam29);
                clearTimeout(ChatSpam30);
                clearTimeout(ChatSpam31);
                clearTimeout(ChatSpam32);
                clearTimeout(ChatSpam33);
                clearTimeout(ChatSpam34);
                clearTimeout(ChatSpam35);
                clearTimeout(ChatSpam36);
                clearTimeout(ChatSpam37);
                clearTimeout(ChatSpam38);
                clearTimeout(ChatSpam39);
                clearTimeout(ChatSpam40);
                clearTimeout(ChatSpam41);
                clearTimeout(ChatSpam42);
			}
			ChatSpam = !ChatSpam;
		}
});

document.addEventListener('keyup', (e)=>{
    spikePlacer.stop(e.keyCode);
    fourSpawnpader.stop(e.keyCode);
    boostPlacer.stop(e.keyCode);
    millPlacer.stop(e.keyCode);
    turretPlacer.stop(e.keyCode);
    healer2.stop(e.keyCode);

    if (e.keyCode == 90 && document.activeElement.id.toLowerCase() !== 'chatbox') {  //Tank gear
        click = false;
        doNewSend(["13c", [0, 0, 1]]);
        doNewSend(["13c", [0, 0, 0]]);
            doNewSend(["13c", [1, 21, 1]]);
        doNewSend(["13c", [0, 21, 1]]);
        doNewSend(["13c", [1, 6, 0]]);
        doNewSend(["13c", [0, 6, 0]]);
    }
});

var ChatSpam1;
var ChatSpam2;
var ChatSpam3;
var ChatSpam4;
var ChatSpam5;
var ChatSpam6;
var ChatSpam7;
var ChatSpam8;
var ChatSpam9;
var ChatSpam10;
var ChatSpam11;
var ChatSpam12;
var ChatSpam13;
var ChatSpam14;
var ChatSpam15;
var ChatSpam16;
var ChatSpam17;
var ChatSpam18;
var ChatSpam19;
var ChatSpam20;
var ChatSpam21;
var ChatSpam22;
var ChatSpam23;
var ChatSpam24;
var ChatSpam25;
var ChatSpam26;
var ChatSpam27;
var ChatSpam28;
var ChatSpam29;
var ChatSpam30;
var ChatSpam31;
var ChatSpam32;
var ChatSpam33;
var ChatSpam34;
var ChatSpam35;
var ChatSpam36;
var ChatSpam37;
var ChatSpam38;
var ChatSpam39;
var ChatSpam40;
var ChatSpam41;
var ChatSpam42;
var ChatSpam = true;
function ChatSpamFC1() {
doNewSend(["ch", [""]]);
clearTimeout(ChatSpam1);
ChatSpam1 = setTimeout(function(){ ChatSpamFC2(); }, 2000);
}
function ChatSpamFC2() {
doNewSend(["ch", [""]]);
clearTimeout(ChatSpam2);
ChatSpam3 = setTimeout(function(){ ChatSpamFC3(); }, 2000);
}
function ChatSpamFC3() {
doNewSend(["ch", [""]]);
clearTimeout(ChatSpam3);
ChatSpam4 = setTimeout(function(){ ChatSpamFC4(); }, 2000);
}
function ChatSpamFC4() {
doNewSend(["ch", [""]]);
clearTimeout(ChatSpam4);
ChatSpam5 = setTimeout(function(){ ChatSpamFC5(); }, 2000);
}
function ChatSpamFC5() {
doNewSend(["ch", [""]]);
clearTimeout(ChatSpam5);
ChatSpam6 = setTimeout(function(){ ChatSpamFC6(); }, 2000);
}
function ChatSpamFC6() {
doNewSend(["ch", [""]]);
clearTimeout(ChatSpam6);
ChatSpam7 = setTimeout(function(){ ChatSpamFC7(); }, 2000);
}
function ChatSpamFC7() {
doNewSend(["ch", [""]]);
clearTimeout(ChatSpam7);
ChatSpam8 = setTimeout(function(){ ChatSpamFC8(); }, 2000);
}
function ChatSpamFC8() {
doNewSend(["ch", [""]]);
clearTimeout(ChatSpam8);
ChatSpam9 = setTimeout(function(){ ChatSpamFC9(); }, 2000);
}
function ChatSpamFC9() {
doNewSend(["ch", [""]]);
clearTimeout(ChatSpam9);
ChatSpam10 = setTimeout(function(){ ChatSpamFC10(); }, 2000);
}
function ChatSpamFC10() {
doNewSend(["ch", [""]]);
clearTimeout(ChatSpam10);
ChatSpam11 = setTimeout(function(){ ChatSpamFC11(); }, 2000);
}
function ChatSpamFC11() {
doNewSend(["ch", [""]]);
clearTimeout(ChatSpam11);
ChatSpam12 = setTimeout(function(){ ChatSpamFC12(); }, 2000);
}
function ChatSpamFC12() {
doNewSend(["ch", [""]]);
clearTimeout(ChatSpam12);
ChatSpam13 = setTimeout(function(){ ChatSpamFC13(); }, 2000);
}
function ChatSpamFC13() {
    doNewSend(["ch", [""]]);
clearTimeout(ChatSpam13);
ChatSpam14 = setTimeout(function(){ ChatSpamFC14(); }, 2000);
}
function ChatSpamFC14() {
doNewSend(["ch", [""]]);
clearTimeout(ChatSpam14);
ChatSpam15 = setTimeout(function(){ ChatSpamFC15(); }, 2000);
}
function ChatSpamFC15() {
doNewSend(["ch", [""]]);
clearTimeout(ChatSpam15);
ChatSpam16 = setTimeout(function(){ ChatSpamFC16(); }, 2000);
}
function ChatSpamFC16() {
doNewSend(["ch", [""]]);
clearTimeout(ChatSpam16);
ChatSpam17 = setTimeout(function(){ ChatSpamFC17(); }, 2000);
}
function ChatSpamFC17() {
doNewSend(["ch", [""]]);
clearTimeout(ChatSpam17);
ChatSpam18 = setTimeout(function(){ ChatSpamFC18(); }, 2000);
}
function ChatSpamFC18() {
doNewSend(["ch", [""]]);
clearTimeout(ChatSpam18);
ChatSpam19 = setTimeout(function(){ ChatSpamFC19(); }, 2000);
}
function ChatSpamFC19() {
doNewSend(["ch", [""]]);
clearTimeout(ChatSpam19);
ChatSpam20 = setTimeout(function(){ ChatSpamFC20(); }, 2000);
}
function ChatSpamFC20() {
doNewSend(["ch", [""]]);
clearTimeout(ChatSpam20);
ChatSpam21 = setTimeout(function(){ ChatSpamFC1(); }, 2000);
}
function ChatSpamFC21() {
doNewSend(["ch", [""]]);
clearTimeout(ChatSpam21);
ChatSpam22 = setTimeout(function(){ ChatSpamFC1(); }, 2000);
}
function ChatSpamFC22() {
doNewSend(["ch", [""]]);
clearTimeout(ChatSpam22);
ChatSpam23 = setTimeout(function(){ ChatSpamFC1(); }, 2000);
}
function ChatSpamFC23() {
doNewSend(["ch", [""]]);
clearTimeout(ChatSpam23);
ChatSpam24 = setTimeout(function(){ ChatSpamFC1(); }, 2000);
}
function ChatSpamFC24() {
doNewSend(["ch", [""]]);
clearTimeout(ChatSpam24);
ChatSpam25 = setTimeout(function(){ ChatSpamFC1(); }, 2000);
}
function ChatSpamFC25() {
doNewSend(["ch", [""]]);
clearTimeout(ChatSpam25);
ChatSpam26 = setTimeout(function(){ ChatSpamFC1(); }, 2000);
}
function ChatSpamFC26() {
doNewSend(["ch", [""]]);
clearTimeout(ChatSpam26);
ChatSpam27 = setTimeout(function(){ ChatSpamFC1(); }, 2000);
}
function ChatSpamFC27() {
doNewSend(["ch", [""]]);
clearTimeout(ChatSpam27);
ChatSpam28 = setTimeout(function(){ ChatSpamFC1(); }, 2000);
}
function ChatSpamFC28() {
doNewSend(["ch", [""]]);
clearTimeout(ChatSpam28);
ChatSpam29 = setTimeout(function(){ ChatSpamFC1(); }, 2000);
}
function ChatSpamFC29() {
doNewSend(["ch", [""]]);
clearTimeout(ChatSpam29);
ChatSpam30 = setTimeout(function(){ ChatSpamFC1(); }, 2000);
}
function ChatSpamFC30() {
doNewSend(["ch", [""]]);
clearTimeout(ChatSpam30);
ChatSpam31 = setTimeout(function(){ ChatSpamFC1(); }, 2000);
}
function ChatSpamFC31() {
doNewSend(["ch", [""]]);
clearTimeout(ChatSpam31);
ChatSpam32 = setTimeout(function(){ ChatSpamFC1(); }, 2000);
}
function ChatSpamFC32() {
doNewSend(["ch", [""]]);
clearTimeout(ChatSpam32);
ChatSpam33 = setTimeout(function(){ ChatSpamFC1(); }, 2000);
}
function ChatSpamFC33() {
doNewSend(["ch", [""]]);
clearTimeout(ChatSpam33);
ChatSpam34 = setTimeout(function(){ ChatSpamFC1(); }, 2000);
}
function ChatSpamFC34() {
doNewSend(["ch", [""]]);
clearTimeout(ChatSpam34);
ChatSpam35 = setTimeout(function(){ ChatSpamFC1(); }, 2000);
}
function ChatSpamFC35() {
doNewSend(["ch", [""]]);
clearTimeout(ChatSpam35);
ChatSpam36 = setTimeout(function(){ ChatSpamFC1(); }, 2000);
}
function ChatSpamFC36() {
doNewSend(["ch", [""]]);
clearTimeout(ChatSpam36);
ChatSpam37 = setTimeout(function(){ ChatSpamFC1(); }, 2000);
}
function ChatSpamFC37() {
doNewSend(["ch", [""]]);
clearTimeout(ChatSpam37);
ChatSpam38 = setTimeout(function(){ ChatSpamFC1(); }, 2000);
}
function ChatSpamFC38() {
doNewSend(["ch", [""]]);
clearTimeout(ChatSpam38);
ChatSpam39 = setTimeout(function(){ ChatSpamFC1(); }, 2000);
}
function ChatSpamFC39() {
doNewSend(["ch", [""]]);
clearTimeout(ChatSpam39);
ChatSpam40 = setTimeout(function(){ ChatSpamFC1(); }, 2000);
}
function ChatSpamFC40() {
doNewSend(["ch", [""]]);
clearTimeout(ChatSpam40);
ChatSpam41 = setTimeout(function(){ ChatSpamFC1(); }, 2000);
}
function ChatSpamFC41() {
doNewSend(["ch", [""]]);
clearTimeout(ChatSpam41);
ChatSpam42 = setTimeout(function(){ ChatSpamFC1(); }, 2000);
}
function ChatSpamFC42() {
doNewSend(["ch", [""]]);
clearTimeout(ChatSpam42);
ChatSpam1 = setTimeout(function(){ ChatSpamFC1(); }, 2000);
}

function isElementVisible(e) {
    return (e.offsetParent !== null);
}

function fourSpawnpad() {
       place(spawnpadType, myPlayer.dir + toRad(135));
       place(spawnpadType, myPlayer.dir + toRad(150));
       place(spawnpadType, myPlayer.dir + toRad(165));
       place(spawnpadType, myPlayer.dir + toRad(180));
       place(spawnpadType, myPlayer.dir + toRad(270));
       place(spawnpadType, myPlayer.dir + toRad(360));
}

function toRad(angle) {
    return angle * 0.01745329251;
}

function dist(a, b){
    return Math.sqrt( Math.pow((b.y-a[2]), 2) + Math.pow((b.x-a[1]), 2) );
}

function update() {
    for (let i=0;i<9;i++){
        if (isElementVisible(document.getElementById("actionBarItem" + i.toString()))){
            primary = i;
        }
    }

    for (let i=9;i<16;i++){
        if (isElementVisible(document.getElementById("actionBarItem" + i.toString()))){
            secondary = i;
        }
    }

    for (let i=16;i<19;i++){
        if (isElementVisible(document.getElementById("actionBarItem" + i.toString()))){
            foodType = i - 16;
        }
    }

    for (let i=19;i<22;i++){
        if (isElementVisible(document.getElementById("actionBarItem" + i.toString()))){
            wallType = i - 16;
        }
    }

    for (let i=22;i<26;i++){
        if (isElementVisible(document.getElementById("actionBarItem" + i.toString()))){
            spikeType = i - 16;
        }
    }

    for (let i=26;i<29;i++){
        if (isElementVisible(document.getElementById("actionBarItem" + i.toString()))){
            millType = i - 16;
        }
    }

    for (let i=29;i<31;i++){
        if (isElementVisible(document.getElementById("actionBarItem" + i.toString()))){
            mineType = i - 16;
        }
    }

    for (let i=31;i<33;i++){
        if (isElementVisible(document.getElementById("actionBarItem" + i.toString()))){
            boostType = i - 16;
        }
    }

   for (let i=33;i<36;i++){
       if (isElementVisible(document.getElementById("actionBarItem" + i.toString()))){
           turretType = i - 16;
       }
   }

   for (let i=36;i<37;i++){
       if (isElementVisible(document.getElementById("actionBarItem" + i.toString()))){
           spawnpadType = i - 16;
       }
   }

   for (let i=37;i<39;i++){
       if (isElementVisible(document.getElementById("actionBarItem" + i.toString()))){
           turretType = i - 16;

       }
   }
}
// ==UserScript==
// @version      none
// @description  this mod takes out some things that will help ease up on the fps!
// @match                 *://moomoo.io/*
// @match                 *://sandbox.moomoo.io/*
// @match                 *://dev.moomoo.io/*
// @grant        none
// ==/UserScript==

//ad remover
var areplacer = document.getElementsByClassName("areplacer");
var count = areplacer.length;
var i;

for(i = 0;i < count;i++)
{
    areplacer[0].parentNode.removeChild(areplacer[0]);
}
