// ==UserScript== 
// @author       WaterZ
// @name         Project AntiHack v1
// @description  decent (okay) mod, and it's the first all-in-one mod I made. ******  F E A T U R E S ******   3xfrozenmill (back!), OP insta, spike/hat/pit/boost/turret macros, FourSpawnpad placer, "click" tank, click-bullspam, boostspike (hidden control - BETA), AutoBuy (BETA), (OTHER SECRET ADMIN KEYS >:).  ******  C O N T R O L S  ******  q=OP heal, r=OP insta, z="click" tank, c=soldier+cx, g=Bull, v=spike, f=boost/pit, h=turret, k=quadSpawnpad, up-arrow=chatspam, Shift=speed hat.  ******  N O T E S/C H A N G E L O G  ******   v0.1-added insta. v0.2-added q-heal. v0.2.1-added very simple autoheal (faster when damage is higher, no dedicated Anti-Insta, sorta anti-clown :(..  v0.3-added mills. v0.3.1-made mills triple. v0.3.2-made back mills.  v0.3.3-made frozen mill.  v0.4-made pit/boost macro.  v0.5-added spike macro.  v0.6-slightly improved autoheal.  v0.7-added hat macros("click" tank, bullspam). v0.7.1 update hat macro (bull, soldier).  v0.8 add turret/tp/blocker/platform macro.  v0.9-secret keys and other stuff :).  v1.0 -added autobuy, Added anti-ad and other stuff to improve FPS (BETA) (NOT FULLY FUNCTIONAL) v1.1(in the works) add "meh" anti-insta.   ******  C O M I N G   S O O N  ******  v2-add WS sender for katana/musket.  v2.1-add anti trap(in the works).  v2.2-add more macros (hats, items, etc.)   v3-add decent anti-insta w/ weapon detection.   v3.1-add smart placement for antitrap.  v3.2-add smart autoplace.  v3.3-add UI changes, and Graphics changes (RGB hp bar, reloadbar, radar, etc.) That's all for now!! 
// @match        *://moomoo.io/*
// @match        *://sandbox.moomoo.io/*
// @match        *://dev.moomoo.io/*
// @grant        none
// @require https://greasyfork.org/scripts/368273-msgpack/code/msgpack.js?version=598723
// @require http://code.jquery.com/jquery-3.3.1.min.js
// @require https://code.jquery.com/ui/1.12.0/jquery-ui.min.js
// @require https://cdnjs.cloudflare.com/ajax/libs/jquery-confirm/3.3.0/jquery-confirm.min.js
// @require https://cdn.jsdelivr.net/gh/emn178/js-sha3/build/sha3.min.js
// @require https://greasyfork.org/scripts/368273-msgpack/code/msgpack.js?version=598723
// @require https://cdnjs.cloudflare.com/ajax/libs/jquery-confirm/3.3.0/jquery-confirm.min.js
// ==UserScript==
setInterval(() => window.follmoo && follmoo(), 10);
setInterval(function() {
    //Blocks ads!
    document.querySelector("#pre-content-container").style.display = "none";
    //Slight FPS increase (uses native res)
    window.location.native_resolution = true;
}, 1000);
let hue = 0;
let mouseX;
let mouseY;
 
let width;
let height;
 
 
setInterval(() => {
    if(autoaim == true) {
        doNewSend(["2", [nearestEnemyAngle]]);
    }
}, 0);
 
setInterval(() => {
    if(click == true) {
    doNewSend(["c", [1, null]]);
    doNewSend(["c", [0, null]]);
    }
}, 10);
setInterval(() => {
    if(autoprimary == true) {
        doNewSend(["5", [primary, true]]);
    }
}, 0);
 
setInterval(() => {
    if(autosecondary == true) {
        doNewSend(["5", [secondary, true]]);
    }
}, 0);
 
 
function normal() {
    hat(normalHat);
    acc(normalAcc);
}
 
function aim(x, y){
     var cvs = document.getElementById("gameCanvas");
     cvs.dispatchEvent(new MouseEvent("mousemove", {
         clientX: x,
         clientY: y
 
     }));
}
 
 
var sWindmill = 78;
var antiinsta = false;
var antibull = false;
var bullturret = false;
var click = false;
var nearestEnemy;
var nearestEnemyAngle;
var isEnemyNear;
var primary;
var secondary;
var foodType;
var wallType;
var spikeType;
var millType;
var mineType;
var boostType;
var turretType;
var spawnpadType;
var autoaim = false;
var autoprimary = false;
var autosecondary = false;
var tick = 1;
var oldHat;
var oldAcc;
var enemiesNear;
var normalHat;
var normalAcc;
var ws;
var msgpack5 = msgpack;
var boostDir;
let myPlayer = {
    id: null,
    x: null,
    y: null,
    dir: null,
    object: null,
    weapon: null,
    clan: null,
    isLeader: null,
    hat: null,
    accessory: null,
    isSkull: null
};
 
let healSpeed = 60;
var messageToggle = 0;
var clanToggle = 0;
let healToggle = 1;
let healToggle1 = 0;
let hatToggle = 1;
let crashing;
let closed;
let AutoPlague = 0;
let katana = 0;
var PREFIX = "!";
let clickInsta = 1;
 
document.msgpack = msgpack;
function n(){
     this.buffer = new Uint8Array([0]);
     this.buffer.__proto__ = new Uint8Array;
     this.type = 0;
}
document.addEventListener("mousedown", e => {
  if (e.button == 1 && iCliked == 1) {
      doNewSend(["ch", ["Weapon?"]]);
doNewSend(['5', ['length', !0]]);
  }
});
 
document.addEventListener("mousedown", e => {
  if (e.button == 2) {
      doNewSend(["ch", ["BullSpam?"]]);
            doNewSend(["13c", [0, 0, 1]]);
            doNewSend(["13c", [1, 7, 0]]);
            doNewSend(["13c", [0, 7, 0]]);
            doNewSend(["13c", [1, 21, 1]]);
            doNewSend(["13c", [0, 21, 1]]);
            setTimeout( () => {
        doNewSend(["13c", [0, 0, 1]]);
        doNewSend(["13c", [0, 0, 0]]);
        doNewSend(["13c", [1, 21, 1]]);
        doNewSend(["13c", [0, 21, 1]]);
        if (myPlayer.y < 2400){
            doNewSend(["13c", [1, 15, 0]]);
            doNewSend(["13c", [0, 15, 0]]);
        } else if (myPlayer.y > 6850 && myPlayer.y < 7550){
            doNewSend(["13c", [1, 31, 0]]);
            doNewSend(["13c", [0, 31, 0]]);
                } else {
	        doNewSend(["13c", [1, 12, 0]]);//land
            doNewSend(["13c", [0, 12, 0]]);//land
                }
          }, 120);
 
 
  }
});
 
 
 
 
WebSocket.prototype.oldSend = WebSocket.prototype.send;
WebSocket.prototype.send = function(m){
    if (!ws){
        document.ws = this;
 
        ws = this;
        socketFound(this);
    }
    this.oldSend(m);
};
 
 
function socketFound(socket){
    socket.addEventListener('message', function(message){
        handleMessage(message);
    });
}
 
function handleMessage(m){
    let temp = msgpack5.decode(new Uint8Array(m.data));
    let data;
    if(temp.length > 1) {
        data = [temp[0], ...temp[1]];
        if (data[1] instanceof Array){
            data = data;
        }
    } else {
      data = temp;
    }
    let item = data[0];
    if(!data) {return}
 
    if(item === "io-init") {
            let cvs = document.getElementById("gameCanvas");
            width = cvs.clientWidth;
            height = cvs.clientHeight;
            $(window).resize(function() {
                width = cvs.clientWidth;
                height = cvs.clientHeight;
            });
            cvs.addEventListener("mousemove", e => {
                mouseX = e.clientX;
                mouseY = e.clientY;
            });
        }
 
 
    if (item == "1" && myPlayer.id == null){
        myPlayer.id = data[1];
    }
 
    if (item == "33") {
        enemiesNear = [];
        for(let i = 0; i < data[1].length / 13; i++) {
            let playerInfo = data[1].slice(13*i, 13*i+13);
            if(playerInfo[0] == myPlayer.id) {
                myPlayer.x = playerInfo[1];
                myPlayer.y = playerInfo[2];
                myPlayer.dir = playerInfo[3];
                myPlayer.object = playerInfo[4];
                myPlayer.weapon = playerInfo[5];
                myPlayer.clan = playerInfo[7];
                myPlayer.isLeader = playerInfo[8];
                myPlayer.hat = playerInfo[9];
                myPlayer.accessory = playerInfo[10];
                myPlayer.isSkull = playerInfo[11];
            } else if(playerInfo[7] != myPlayer.clan || playerInfo[7] === null) {
                enemiesNear.push(playerInfo);
            }
        }
    }
 
 
    if(item == "6"){
        for(let i = 0; i < data[1].length / 8; i++){
            let ObjectData = data[1].slice(8*i, 8*i+8);
            if(ObjectData[6] == 15 && ObjectData[7] != myPlayer.id){
                if(Math.sqrt(Math.pow((myPlayer.y-ObjectData[2]), 2) + Math.pow((myPlayer.x-ObjectData[1]), 2)) < 120){
                    for(let i=0;i<36;i++){
                        let angle = myPlayer.dir + toRad(i * 10);
                place(spikeType, angle);
                        doNewSend(["5", [primary, true]]);
                        doNewSend(["ch", ["easy?"]]);
 
 
                    }
 
                }
            }
        }
    }
 
    isEnemyNear = false;
    if(enemiesNear) {
        nearestEnemy = enemiesNear.sort((a,b) => dist(a, myPlayer) - dist(b, myPlayer))[0];
    }
 
    if(nearestEnemy) {
        nearestEnemyAngle = Math.atan2(nearestEnemy[2]-myPlayer.y, nearestEnemy[1]-myPlayer.x);
        if(Math.sqrt(Math.pow((myPlayer.y-nearestEnemy[2]), 2) + Math.pow((myPlayer.x-nearestEnemy[1]), 2)) < 0) {
            isEnemyNear = true;
            if(autoaim == false && myPlayer.hat != 7 && myPlayer.hat != 53) {
                normalHat = 6;
                if(primary != 8) {
                    normalAcc = 19
                }
            };
        }
    }
 
 
    if (!nearestEnemy) {
        nearestEnemyAngle = myPlayer.dir;
    }
 
if(item == "h" && data[1] == myPlayer.id) {
       if(data[2] < 100 && data[2] > 0 && healToggle == 1) { //1
           setTimeout( () => {
               place(foodType, null);
               place(foodType, null);
               place(foodType, null);
               place(foodType, null);
               place(foodType, null);
               doNewSend(["ch", ["Anti-Insta?"]])
           }, healSpeed);
       }
   }
 
   update();
}
 
 
function doNewSend(sender){
    ws.send(new Uint8Array(Array.from(msgpack5.encode(sender))));
}
 
function acc(id) {
    doNewSend(["13c", [0, 0, 1]]);
    doNewSend(["13c", [0, id, 1]]);
}
 
function hat(id) {
    doNewSend(["13c", [0, id, 0]]);
}
 
 
function place(id, angle = Math.atan2(mouseY - height / 2, mouseX - width / 2)) { //Mill Placer
    doNewSend(["5", [id, null]]);
    doNewSend(["c", [1, angle]]);
    doNewSend(["c", [0, angle]]);
    doNewSend(["5", [null]]);
    doNewSend(["ch", ["Frozen Triple?"]]);
}
 
 
function holding(id, angle = Math.atan2(mouseY - height / 2, mouseX - width / 2)) {
    doNewSend(["5", [id, null]]);
}
 
function boostSpike() {
    if(boostDir == null) {
        boostDir = nearestEnemyAngle;
    }
    place(spikeType, boostDir + toRad(90));
    place(spikeType, boostDir - toRad(90));
    place(boostType, boostDir);
    doNewSend(["33", [boostDir]]);
}
 
 
 
var repeater = function(key, action, interval) {
    let _isKeyDown = false;
    let _intervalId = undefined;
 
    return {
        start(keycode) {
            if(keycode == key && document.activeElement.id.toLowerCase() !== 'chatbox') {
                _isKeyDown = true;
                if(_intervalId === undefined) {
                    _intervalId = setInterval(() => {
                        action();
                        if(!_isKeyDown){
                            clearInterval(_intervalId);
                            _intervalId = undefined;
                            console.log("claered");
                        }
                    }, interval);
                }
            }
        },
 
        stop(keycode) {
            if(keycode == key && document.activeElement.id.toLowerCase() !== 'chatbox') {
                _isKeyDown = false;
            }
        }
    };
 
 
}
 
if(isEnemyNear == false && autoaim == false) {
        normalAcc = 11;
        if (myPlayer.y < 2400){
            normalHat = 15;
        } else if (myPlayer.y > 6850 && myPlayer.y < 7550){
            normalHat = 31;
        } else {
	        normalHat = 12;
        }
    }
    if (!nearestEnemy) {
        nearestEnemyAngle = myPlayer.dir;
    }
 
var repeater2 = function(key, action) {
    let _isKeyDown = false;
 
    return {
        start(keycode) {
            if(keycode == key && document.activeElement.id.toLowerCase() !== 'chatbox') {
                _isKeyDown = true;
            }
        },
 
        stop(keycode) {
            if(keycode == key && document.activeElement.id.toLowerCase() !== 'chatbox') {
                _isKeyDown = false;
            }
        }
    };
 
 
}
 
 
 
 
const healer2 = repeater(81, () => {place(foodType, null);
                                    place(foodType, null);
                                    place(foodType, null)}, 30);
const boostPlacer = repeater(70, () => {place(boostType);
                                        place(boostType);
                                        place(boostType);
                                        place(boostType)}, 0);
const fourSpawnpader = repeater(75, fourSpawnpad, 0);
const spikePlacer = repeater(86, () => {place(spikeType);
                                        place(spikeType);
                                        place(spikeType);
                                        place(spikeType)}, 0);
 
const millPlacer = repeater(78, () => {
         place(millType, Math.atan2(mouseY - height / 2, mouseX - width / 2) + toRad(0xe53d2f0184));
        place(millType, Math.atan2(mouseY - height / 2, mouseX - width / 2) + toRad(0xe53d2f0144));
        place(millType, Math.atan2(mouseY - height / 2, mouseX - width / 2) + toRad(-0xe53d2f0144));
;});
const turretPlacer = repeater(72, () => {place(turretType)}, 0);
 
document.addEventListener('keydown', (e)=>{
    spikePlacer.start(e.keyCode);
    fourSpawnpader.start(e.keyCode);
    healer2.start(e.keyCode);
    boostPlacer.start(e.keyCode);
    millPlacer.start(e.keyCode);
    turretPlacer.start(e.keyCode);
 
    if (e.keyCode == 67 && document.activeElement.id.toLowerCase() !== 'chatbox') {
        doNewSend(["13c", [1, 6, 0]]);
        doNewSend(["13c", [0, 6, 0]]);
        doNewSend(["13c", [0, 0, 1]]);
        doNewSend(["ch", ["Soldier?"]]);
    }
 
 
if (e.keyCode == 71 && document.activeElement.id.toLowerCase() !== 'chatbox') {
        doNewSend(["13c", [1, 7, 0]]);
        doNewSend(["13c", [0, 7, 0]]);
        doNewSend(["13c", [0, 0, 1]]);
    doNewSend(["ch", ["Bull?"]]);
    }
 
 
 
 
 
    if (e.keyCode == 90 && document.activeElement.id.toLowerCase() !== 'chatbox') { //Tank Gear
        click = true;
        doNewSend(["13c", [0, 0, 1]]);
        doNewSend(["13c", [0, 0, 0]]);
        doNewSend(["13c", [1, 40, 0]]);
        doNewSend(["13c", [0, 40, 0]]);
                doNewSend(["13c", [1, 21, 1]]);
        doNewSend(["13c", [0, 21, 1]]);
    }
 
    if (e.keyCode == 84 && document.activeElement.id.toLowerCase() !== 'chatbox') {
        doNewSend(["13c", [1, 22, 0]]);
        doNewSend(["13c", [0, 22, 0]]);
        doNewSend(["13c", [0, 0, 1]]);
 
    }
 
 if (e.keyCode == 16 && document.activeElement.id.toLowerCase() !== 'chatbox') {
     doNewSend(["ch", ["I am speed"]]);
        doNewSend(["13c", [0, 0, 1]]);
        doNewSend(["13c", [0, 0, 0]]);
            doNewSend(["13c", [1, 11, 1]]);
        doNewSend(["13c", [0, 11, 1]]);
        if (myPlayer.y < 2400){
                doNewSend(["13c", [1, 11, 1]]);
                doNewSend(["13c", [0, 11, 1]]);
            doNewSend(["13c", [1, 15, 0]]);
                doNewSend(["13c", [0, 15, 0]]);
        } else if (myPlayer.y > 6850 && myPlayer.y < 7550){
            doNewSend(["13c", [1, 11, 1]]);
                doNewSend(["13c", [0, 11, 1]]);
                doNewSend(["13c", [1, 31, 0]]);
            doNewSend(["13c", [0, 31, 0]]);
        } else {
                doNewSend(["13c", [1, 11, 1]]);
            doNewSend(["13c", [0, 11, 1]]);
                doNewSend(["13c", [1, 12, 0]]);
            doNewSend(["13c", [0, 12, 0]]);
        }
    }
 
    if(e.keyCode == 106 && document.activeElement.id.toLowerCase() !== 'chatbox') {
        healToggle = (healToggle + 1) % 2;
    }
    if(e.keyCode == 109 && document.activeElement.id.toLowerCase() !== 'chatbox') {
        katana = (katana + 1) % 2;
    }
 
 
 
     if(e.keyCode == 82 && document.activeElement.id.toLowerCase() !== 'chatbox') {
            autoaim = true;
            autoprimary = true;
            autosecondary = false;
            doNewSend(["13c", [0, 0, 1]]);
            doNewSend(["5", [primary, true]]);
            doNewSend(["7", [1]]);
            doNewSend(["13c", [1, 7, 0]]);
            doNewSend(["13c", [0, 7, 0]]);
            doNewSend(["13c", [1, 13, 1]]);
            doNewSend(["13c", [0, 13, 1]]);
         doNewSend(["ch", ["Insta?"]]);
        setTimeout( () => {
            autoprimary = false;
            autosecondary = true;
            doNewSend(["13c", [0, 0, 0]]);
            doNewSend(["13c", [1, 53, 0]]);
            doNewSend(["13c", [0, 53, 0]]);
            doNewSend(["13c", [1, 21, 1]]);
            doNewSend(["13c", [0, 21, 1]]);
            doNewSend(["5", [secondary, true]]);
        }, 110);
        setTimeout( () => {
            doNewSend(["7", [1]]);
            doNewSend(["5", [primary, true]]);
            autosecondary = false;
            autoaim = false;
                           doNewSend(["13c", [0, 0, 1]]);
        doNewSend(["13c", [0, 0, 0]]);
        }, 220);
    }
 
})
document.addEventListener('keyup', (e)=>{
if (e.keyCode == 38 && document.activeElement.id.toLowerCase() !== 'chatbox') {
			if (ChatSpam) {
            ChatSpam1 = setTimeout(function(){ ChatSpamFC1(); }, 1);
			} else {
            clearTimeout(ChatSpam1);
            clearTimeout(ChatSpam2);
            clearTimeout(ChatSpam3);
            clearTimeout(ChatSpam4);
            clearTimeout(ChatSpam5);
            clearTimeout(ChatSpam6);
            clearTimeout(ChatSpam7);
            clearTimeout(ChatSpam8);
            clearTimeout(ChatSpam9);
            clearTimeout(ChatSpam10);
            clearTimeout(ChatSpam11);
            clearTimeout(ChatSpam12);
            clearTimeout(ChatSpam13);
            clearTimeout(ChatSpam14);
            clearTimeout(ChatSpam15);
            clearTimeout(ChatSpam16);
            clearTimeout(ChatSpam17);
            clearTimeout(ChatSpam18);
            clearTimeout(ChatSpam19);
            clearTimeout(ChatSpam20);
                clearTimeout(ChatSpam21);
                clearTimeout(ChatSpam22);
                clearTimeout(ChatSpam23);
                clearTimeout(ChatSpam24);
                clearTimeout(ChatSpam25);
                clearTimeout(ChatSpam26);
                clearTimeout(ChatSpam27);
                clearTimeout(ChatSpam28);
                clearTimeout(ChatSpam29);
                clearTimeout(ChatSpam30);
                clearTimeout(ChatSpam31);
                clearTimeout(ChatSpam32);
                clearTimeout(ChatSpam33);
                clearTimeout(ChatSpam34);
                clearTimeout(ChatSpam35);
                clearTimeout(ChatSpam36);
                clearTimeout(ChatSpam37);
                clearTimeout(ChatSpam38);
                clearTimeout(ChatSpam39);
                clearTimeout(ChatSpam40);
                clearTimeout(ChatSpam41);
                clearTimeout(ChatSpam42);
			}
			ChatSpam = !ChatSpam;
		}
})
 
document.addEventListener('keyup', (e)=>{
    spikePlacer.stop(e.keyCode);
    fourSpawnpader.stop(e.keyCode);
    boostPlacer.stop(e.keyCode);
    millPlacer.stop(e.keyCode);
    turretPlacer.stop(e.keyCode);
    healer2.stop(e.keyCode);
 
    if (e.keyCode == 90 && document.activeElement.id.toLowerCase() !== 'chatbox') {  //Tank gear
        click = false;
        doNewSend(["ch", ["Tank?"]]);
        doNewSend(["13c", [0, 0, 1]]);
        doNewSend(["13c", [0, 0, 0]]);
            doNewSend(["13c", [1, 21, 1]]);
        doNewSend(["13c", [0, 21, 1]]);
        doNewSend(["13c", [1, 6, 0]]);
        doNewSend(["13c", [0, 6, 0]]);
    }
})
 
var ChatSpam1;
var ChatSpam2;
var ChatSpam3;
var ChatSpam4;
var ChatSpam5;
var ChatSpam6;
var ChatSpam7;
var ChatSpam8;
var ChatSpam9;
var ChatSpam10;
var ChatSpam11;
var ChatSpam12;
var ChatSpam13;
var ChatSpam14;
var ChatSpam15;
var ChatSpam16;
var ChatSpam17;
var ChatSpam18;
var ChatSpam19;
var ChatSpam20;
var ChatSpam21;
var ChatSpam22;
var ChatSpam23;
var ChatSpam24;
var ChatSpam25;
var ChatSpam26;
var ChatSpam27;
var ChatSpam28;
var ChatSpam29;
var ChatSpam30;
var ChatSpam31;
var ChatSpam32;
var ChatSpam33;
var ChatSpam34;
var ChatSpam35;
var ChatSpam36;
var ChatSpam37;
var ChatSpam38;
var ChatSpam39;
var ChatSpam40;
var ChatSpam41;
var ChatSpam42;
var ChatSpam = true;
function ChatSpamFC1() {
doNewSend(["ch", ["People are in big confusion"]]);
clearTimeout(ChatSpam1);
ChatSpam1 = setTimeout(function(){ ChatSpamFC2(); }, 2000);
}
function ChatSpamFC2() {
doNewSend(["ch", ["They don't like their constitutions"]]);
clearTimeout(ChatSpam2);
ChatSpam3 = setTimeout(function(){ ChatSpamFC3(); }, 2000);
}
function ChatSpamFC3() {
doNewSend(["ch", ["Everyday they draw conclusions"]]);
clearTimeout(ChatSpam3);
ChatSpam4 = setTimeout(function(){ ChatSpamFC4(); }, 2000);
}
function ChatSpamFC4() {
doNewSend(["ch", ["And they're still prepared for war"]]);
clearTimeout(ChatSpam4);
ChatSpam5 = setTimeout(function(){ ChatSpamFC5(); }, 2000);
}
function ChatSpamFC5() {
doNewSend(["ch", ["Some can say what's ineffective"]]);
clearTimeout(ChatSpam5);
ChatSpam6 = setTimeout(function(){ ChatSpamFC6(); }, 2000);
}
function ChatSpamFC6() {
doNewSend(["ch", ["Some make up themselves attractive"]]);
clearTimeout(ChatSpam6);
ChatSpam7 = setTimeout(function(){ ChatSpamFC7(); }, 2000);
}
function ChatSpamFC7() {
doNewSend(["ch", ["Build up things they call protective"]]);
clearTimeout(ChatSpam7);
ChatSpam8 = setTimeout(function(){ ChatSpamFC8(); }, 2000);
}
function ChatSpamFC8() {
doNewSend(["ch", ["Well your life seems quite bizarre"]]);
clearTimeout(ChatSpam8);
ChatSpam9 = setTimeout(function(){ ChatSpamFC9(); }, 2000);
}
function ChatSpamFC9() {
doNewSend(["ch", ["In the sky a mighty eagle"]]);
clearTimeout(ChatSpam9);
ChatSpam10 = setTimeout(function(){ ChatSpamFC10(); }, 2000);
}
function ChatSpamFC10() {
doNewSend(["ch", ["Doesn't care 'bout what's illegal"]]);
clearTimeout(ChatSpam10);
ChatSpam11 = setTimeout(function(){ ChatSpamFC11(); }, 2000);
}
function ChatSpamFC11() {
doNewSend(["ch", ["On it's wings the rainbow's light"]]);
clearTimeout(ChatSpam11);
ChatSpam12 = setTimeout(function(){ ChatSpamFC12(); }, 2000);
}
function ChatSpamFC12() {
doNewSend(["ch", ["It's flying to eternity"]]);
clearTimeout(ChatSpam12);
ChatSpam13 = setTimeout(function(){ ChatSpamFC13(); }, 2000);
}
function ChatSpamFC13() {
    doNewSend(["ch", ["Eagle fly free"]]);
clearTimeout(ChatSpam13);
ChatSpam14 = setTimeout(function(){ ChatSpamFC14(); }, 2000);
}
function ChatSpamFC14() {
doNewSend(["ch", ["Let people see"]]);
clearTimeout(ChatSpam14);
ChatSpam15 = setTimeout(function(){ ChatSpamFC15(); }, 2000);
}
function ChatSpamFC15() {
doNewSend(["ch", ["Just make it your own way"]]);
clearTimeout(ChatSpam15);
ChatSpam16 = setTimeout(function(){ ChatSpamFC16(); }, 2000);
}
function ChatSpamFC16() {
doNewSend(["ch", ["Leave time behind"]]);
clearTimeout(ChatSpam16);
ChatSpam17 = setTimeout(function(){ ChatSpamFC17(); }, 2000);
}
function ChatSpamFC17() {
doNewSend(["ch", ["Follow the sign"]]);
clearTimeout(ChatSpam17);
ChatSpam18 = setTimeout(function(){ ChatSpamFC18(); }, 2000);
}
function ChatSpamFC18() {
doNewSend(["ch", ["Together we'll fly someday"]]);
clearTimeout(ChatSpam18);
ChatSpam19 = setTimeout(function(){ ChatSpamFC19(); }, 2000);
}
function ChatSpamFC19() {
doNewSend(["ch", ["Hey, we think so supersonic"]]);
clearTimeout(ChatSpam19);
ChatSpam20 = setTimeout(function(){ ChatSpamFC20(); }, 2000);
}
function ChatSpamFC20() {
doNewSend(["ch", ["And we make our bombs atomic"]]);
clearTimeout(ChatSpam20);
ChatSpam21 = setTimeout(function(){ ChatSpamFC1(); }, 2000);
}
function ChatSpamFC21() {
doNewSend(["ch", ["Or the better quite neutronic"]]);
clearTimeout(ChatSpam21);
ChatSpam22 = setTimeout(function(){ ChatSpamFC1(); }, 2000);
}
function ChatSpamFC22() {
doNewSend(["ch", ["But the poor don't see a dime"]]);
clearTimeout(ChatSpam22);
ChatSpam23 = setTimeout(function(){ ChatSpamFC1(); }, 2000);
}
function ChatSpamFC23() {
doNewSend(["ch", ["Nowadays the air's polluted"]]);
clearTimeout(ChatSpam23);
ChatSpam24 = setTimeout(function(){ ChatSpamFC1(); }, 2000);
}
function ChatSpamFC24() {
doNewSend(["ch", ["Ancient people persecuted"]]);
clearTimeout(ChatSpam24);
ChatSpam25 = setTimeout(function(){ ChatSpamFC1(); }, 2000);
}
function ChatSpamFC25() {
doNewSend(["ch", ["That's what mankind contributed"]]);
clearTimeout(ChatSpam25);
ChatSpam26 = setTimeout(function(){ ChatSpamFC1(); }, 2000);
}
function ChatSpamFC26() {
doNewSend(["ch", ["To create a better time"]]);
clearTimeout(ChatSpam26);
ChatSpam27 = setTimeout(function(){ ChatSpamFC1(); }, 2000);
}
function ChatSpamFC27() {
doNewSend(["ch", ["In the sky a mighty eagle"]]);
clearTimeout(ChatSpam27);
ChatSpam28 = setTimeout(function(){ ChatSpamFC1(); }, 2000);
}
function ChatSpamFC28() {
doNewSend(["ch", ["Doesn't care 'bout what's illegal"]]);
clearTimeout(ChatSpam28);
ChatSpam29 = setTimeout(function(){ ChatSpamFC1(); }, 2000);
}
function ChatSpamFC29() {
doNewSend(["ch", ["On it's wings the rainbow's light"]]);
clearTimeout(ChatSpam29);
ChatSpam30 = setTimeout(function(){ ChatSpamFC1(); }, 2000);
}
function ChatSpamFC30() {
doNewSend(["ch", ["It's flying to eternity"]]);
clearTimeout(ChatSpam30);
ChatSpam31 = setTimeout(function(){ ChatSpamFC1(); }, 2000);
}
function ChatSpamFC31() {
doNewSend(["ch", ["Eagle fly free"]]);
clearTimeout(ChatSpam31);
ChatSpam32 = setTimeout(function(){ ChatSpamFC1(); }, 2000);
}
function ChatSpamFC32() {
doNewSend(["ch", ["Let people see"]]);
clearTimeout(ChatSpam32);
ChatSpam33 = setTimeout(function(){ ChatSpamFC1(); }, 2000);
}
function ChatSpamFC33() {
doNewSend(["ch", ["Just make it your own way"]]);
clearTimeout(ChatSpam33);
ChatSpam34 = setTimeout(function(){ ChatSpamFC1(); }, 2000);
}
function ChatSpamFC34() {
doNewSend(["ch", ["Leave time behind"]]);
clearTimeout(ChatSpam34);
ChatSpam35 = setTimeout(function(){ ChatSpamFC1(); }, 2000);
}
function ChatSpamFC35() {
doNewSend(["ch", ["Follow the sign"]]);
clearTimeout(ChatSpam35);
ChatSpam36 = setTimeout(function(){ ChatSpamFC1(); }, 2000);
}
function ChatSpamFC36() {
doNewSend(["ch", ["Together we'll fly someday"]]);
clearTimeout(ChatSpam36);
ChatSpam37 = setTimeout(function(){ ChatSpamFC1(); }, 2000);
}
function ChatSpamFC37() {
doNewSend(["ch", ["Song: \'Eagle Fly Free\'"]]);
clearTimeout(ChatSpam37);
ChatSpam38 = setTimeout(function(){ ChatSpamFC1(); }, 2000);
}
function ChatSpamFC38() {
doNewSend(["ch", ["Artist: Helloween"]]);
clearTimeout(ChatSpam38);
ChatSpam39 = setTimeout(function(){ ChatSpamFC1(); }, 2000);
}
function ChatSpamFC39() {
doNewSend(["ch", ["AutoChatSpam by WaterZ"]]);
clearTimeout(ChatSpam39);
ChatSpam40 = setTimeout(function(){ ChatSpamFC1(); }, 2000);
}
function ChatSpamFC40() {
doNewSend(["ch", ["Song modified by WaterZ"]]);
clearTimeout(ChatSpam40);
ChatSpam41 = setTimeout(function(){ ChatSpamFC1(); }, 2000);
}
function ChatSpamFC41() {
doNewSend(["ch", ["discord: WaterZ#9011"]]);
clearTimeout(ChatSpam41);
ChatSpam42 = setTimeout(function(){ ChatSpamFC1(); }, 2000);
}
function ChatSpamFC42() {
doNewSend(["ch", ["Subscribe to WaterZ on YT!!"]]);
clearTimeout(ChatSpam42);
ChatSpam1 = setTimeout(function(){ ChatSpamFC1(); }, 2000);
}
 
 
 
 
 
 
function isElementVisible(e) {
    return (e.offsetParent !== null);
}
 
function fourSpawnpad() {
       place(spawnpadType, myPlayer.dir + toRad(135));
       place(spawnpadType, myPlayer.dir + toRad(150));
       place(spawnpadType, myPlayer.dir + toRad(165));
       place(spawnpadType, myPlayer.dir + toRad(180));
       place(spawnpadType, myPlayer.dir + toRad(270));
       place(spawnpadType, myPlayer.dir + toRad(360));
}
 
function toRad(angle) {
    return angle * 0.01745329251;
}
 
function dist(a, b){
    return Math.sqrt( Math.pow((b.y-a[2]), 2) + Math.pow((b.x-a[1]), 2) );
}
 
function update() {
    for (let i=0;i<9;i++){
        if (isElementVisible(document.getElementById("actionBarItem" + i.toString()))){
            primary = i;
        }
    }
 
    for (let i=9;i<16;i++){
        if (isElementVisible(document.getElementById("actionBarItem" + i.toString()))){
            secondary = i;
        }
    }
 
    for (let i=16;i<19;i++){
        if (isElementVisible(document.getElementById("actionBarItem" + i.toString()))){
            foodType = i - 16;
        }
    }
 
    for (let i=19;i<22;i++){
        if (isElementVisible(document.getElementById("actionBarItem" + i.toString()))){
            wallType = i - 16;
        }
    }
 
    for (let i=22;i<26;i++){
        if (isElementVisible(document.getElementById("actionBarItem" + i.toString()))){
            spikeType = i - 16;
        }
    }
 
    for (let i=26;i<29;i++){
        if (isElementVisible(document.getElementById("actionBarItem" + i.toString()))){
            millType = i - 16;
        }
    }
 
    for (let i=29;i<31;i++){
        if (isElementVisible(document.getElementById("actionBarItem" + i.toString()))){
            mineType = i - 16;
        }
    }
 
    for (let i=31;i<33;i++){
        if (isElementVisible(document.getElementById("actionBarItem" + i.toString()))){
            boostType = i - 16;
        }
    }
 
   for (let i=33;i<36;i++){
       if (isElementVisible(document.getElementById("actionBarItem" + i.toString()))){
           turretType = i - 16;
       }
   }
 
   for (let i=36;i<37;i++){
       if (isElementVisible(document.getElementById("actionBarItem" + i.toString()))){
           spawnpadType = i - 16;
       }
   }
 
   for (let i=37;i<39;i++){
       if (isElementVisible(document.getElementById("actionBarItem" + i.toString()))){
           turretType = i - 16;
 
       }
   }
}
